@model IEnumerable<FinalProject.Models.Office>
@{
    ViewBag.Title = "Index";

}
<h2>List Of Offices</h2>
<p>
    @Html.ActionLink("Create New", "Create")
</p>
@using (Html.BeginForm())
{
    <p class="street-block input">
         -----Street----- @Html.TextBox("Street")<br />
         ------City------ @Html.TextBox("city")<br />
         ---Manager--- @Html.TextBox("manager")<br />
        <input type="submit" value="Search" class="btn btn-danger" />
        <input type="button" value="Show all" onclick="location.href='@Url.Action("Index")'" class="btn btn-danger" />
    </p>
}
<div class="table-responsive">
    <table class="table" style="background:#bcbec3 !important">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.OfficeID)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.City)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Street)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.HouseNumber)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Latitude)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Longitude)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Manager)
            </th>
        </tr>


        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.OfficeID)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.City)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Street)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.HouseNumber)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Latitude)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Longitude)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Manager)
                </td>
                <td>
                    <
                    @Html.ActionLink("Edit", "Edit", new { id = item.OfficeID }) |
                    @Html.ActionLink("Details", "Details", new { id = item.OfficeID }) |
                    @Html.ActionLink("Delete", "Delete", new { id = item.OfficeID })
                </td>
            </tr>

        }

    </table>
</div>
@if (Model.Count() == 0)
{
    <strong>No offices were Found</strong>
}
<style>
    /* Always set the map height explicitly to define the size of the div
        * element that contains the map. */
    #map {
        height: 100%;
    }
    /* Optional: Makes the sample page fill the window. */
    html, body {
        height: 100%;
        margin: 0;
        padding: 0;
    }
</style>
<script>

        function AddMarker(map, Latitude, Longitude) {
            var latlng = new google.maps.LatLng(Latitude, Longitude);

            var markeroption = new google.maps.Marker({
                position: latlng,
                draggable: false,
                map: map,
                title: "Center"
            });
        }

        function initMap() {
            var latlng = new google.maps.LatLng(32.812452, 34.996451);

            var options = {
                zoom: 10, center: latlng,
                mapTypeId: google.maps.MapTypeId.TERRAIN
            };

            var map = new google.maps.Map(document.getElementById
                ("map_canvas"), options);

            @foreach (var l in Model)
        {
             @(string.Format("AddMarker(map, {0},{1});", l.Latitude, l.Longitude));
        }
            return map;
        };


</script>
<div id="map_canvas" class="offices-map" style="width: 500px; height: 300px; margin: auto !important" />
<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBz6T_-pt82oRbHIpMHvVQakDH6PzZ31C8&callback=initMap"
        async defer></script>

<!--


<div id="map"></div>
<script>
    var map;
    var haifa = { name: "Haifa", lat: 32.812452, lng: 34.996451 };
    var telAviv = { name: "Tel-Aviv", lat: 32.086956, lng: 34.782392 };
    var beerSeva = { name: "Beer-Sheva", lat: 31.251601, lng: 34.798025 };
    var jerusalem = { name: "Jerusalem", lat: 31.783242, lng: 35.217728 };
    var tiberias = { name: "Tiberias", lat: 32.794648, lng: 35.532391 };
    var eilat = { name: "Eilat", lat: 29.560059, lng: 34.941117 };
    var ashkelon = { name: "Ashkelon", lat: 31.673538, lng: 34.580925 };
    var afula = { name: "Afula", lat: 32.610551, lng: 35.293307 };
    var kiryatShmona = { name: "Kiryat Shmona", lat: 33.207793, lng: 35.568489 };
    var markers = [];
    markers.push(haifa, telAviv, jerusalem, beerSeva, tiberias, eilat, ashkelon, afula, kiryatShmona);


    function initMap() {
        map = new google.maps.Map(document.getElementById('map'), {
            center: { lat: 32.610551, lng: 35.293307 },
            zoom: 8
        });

        for (i = 0; i < markers.length ; i++) {
            var name = markers[i].name
            var lat = markers[i].lat
            var lng = markers[i].lng

           var mrk = markers[i];
            var marker = new google.maps.Marker({
                position: { lat:mrk.lat, lng: mrk.lng},
                map: map,
                title: mrk.name
            });

        }

    }



</script>
<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBz6T_-pt82oRbHIpMHvVQakDH6PzZ31C8&callback=initMap"
        async defer></script>
     -->
